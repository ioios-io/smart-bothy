input_select:
  # All Scenes
  living_room_scenes:
    name: Living Room Scenes
    options:
      - "Off"
      - "Manual"
      - "Natural"
      - "Bright"
      - "Relax"
      - "Cosy"
      - "Dinner"
      - "Movies"
    initial: "Off"
    icon: mdi:palette-outline

notify:
  - name: living_room_latest_scene
    platform: file
    filename: /config/cache/living_room_latest_scene.json

input_text:
  living_room_last_action:
    name: "Last Action: Living Room"
    icon: mdi:gesture-tap-button
    initial: "Fuck Knows"

  living_room_previous_scene:
    name: Previous Living Room Scene
    icon: mdi:palette
    initial: "Reboot"

light:
  # Animated Lights
  - platform: group
    name: Living Room Ceiling Lights
    scan_interval: 11
    entities:
      - light.living_room_ceiling_1
      - light.living_room_ceiling_2
      - light.living_room_ceiling_3
      - light.living_room_ceiling_4

  # Un-animated Lights
  - platform: group
    name: Living Room Lamps
    scan_interval: 7
    entities:
      - light.living_room_lamp
      - light.living_room_candle

  # All Lights
  - platform: group
    name: Living Room Lights
    scan_interval: 9
    entities:
      - light.living_room_ceiling_1
      - light.living_room_ceiling_2
      - light.living_room_ceiling_3
      - light.living_room_ceiling_4
      - light.living_room_lamp
      - light.living_room_candle

input_boolean:
  # Boolean which is on during scene change
  living_room_scene_changing:
    name: Living Room Scene Change In Progress
    icon: mdi:repeat-once

timer:
  # Non-animated lights are checked for brightness changes
  # Fluctuations occur for a short period after changing scenes
  living_room_scene_settling:
    name: Safe Time After Scene Begins
    duration: 30
    icon: mdi:timer-sand

  # Timer set during each scene on script for transitions
  living_room_scene_changing:
    name: Time For Scene Change
    icon: mdi:timer-sand-empty

sensor:
  - platform: file
    name: Living Room Last Scene Cache
    file_path: /config/cache/living_room_latest_scene.json
    value_template: "{{ value_json.living_room }}"

  - platform: template
    sensors:
      # Determine if any lights in any group is currently on
      living_room_active_light_count:
        friendly_name: "Living Room Active Light Count"
        unit_of_measurement: Lights
        value_template: >-
          {{ expand('light.living_room_lights') | selectattr('state', 'ne', 'off') | list | count }}

      # Get an overall warmth value for each group of lights
      living_room_lights_brightness:
        friendly_name: "Living Room Lights Brightness"
        value_template: "{{ state_attr('light.living_room_lights', 'brightness') | int }}"
      living_room_lamps_brightness:
        friendly_name: "Living Room Lamps Brightness"
        value_template: "{{ state_attr('light.living_room_lamps', 'brightness') | int }}"
      living_room_ceiling_lights_brightness:
        friendly_name: "Living Room Ceiling Lights Brightness"
        value_template: "{{ state_attr('light.living_room_ceiling_lights', 'brightness') | int }}"

      # Get an overall warmth value for each group of lights
      living_room_lights_warmth:
        friendly_name: "Living Room Lights Warmth"
        value_template: "{{ state_attr('light.living_room_lights', 'color_temp') | int }}"
      living_room_lamps_warmth:
        friendly_name: "Living Room Lamps Warmth"
        value_template: "{{ state_attr('light.living_room_lamps', 'color_temp') | int }}"
      living_room_ceiling_lights_warmth:
        friendly_name: "Living Room Ceiling Lights Warmth"
        value_template: "{{ state_attr('light.living_room_ceiling_lights', 'color_temp') | int }}"

      # Timer counters as a sensor for easier display
      living_room_scene_changing_timer:
        friendly_name: "Living Room Scene Change Countdown"
        value_template: "{{ state_attr('timer.living_room_scene_changing', 'finishes_at') | int }}"
      living_room_scene_settling_timer:
        friendly_name: "Living Room Scene Settling Countdown"
        value_template: "{{ state_attr('timer.living_room_scene_settling', 'finishes_at') | int }}"

automation:
  - alias: "Living Room Circadian Lights"
    trigger:
      - platform: time_pattern
        minutes: /1
    condition: "{{ is_state('input_select.living_room_scenes', 'Natural') }}"
    action:
      - service: script.living_room_scene_natural_update

  - alias: Living Room Lights Off
    description: ""
    trigger:
      - platform: state
        entity_id: sensor.living_room_lights_brightness
        to: "0"
    condition: []
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.living_room_scenes
          option: "Off"
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.living_room_ceiling_animation
    mode: single

  - alias: Living Room Lights Off Check
    description: ""
    trigger:
      - platform: template
        value_template: "{{ states('sensor.living_room_lights_brightness') | int < 3 }}"
        for: "00:00:10"
    condition: "{{ states('input_select.living_room_scenes') | string != 'Manual' }}"
    action:
      - service: light.turn_off
        data:
          entity_id: light.living_room_lamps
      - service: light.turn_off
        data:
          entity_id: light.living_room_ceiling_lights
    mode: restart

  - alias: Living Room Manual Detected
    description: ""
    trigger:
      - platform: state
        entity_id: light.living_room_lamps
    condition:
      condition: template
      value_template: >
        {{ trigger.from_state and
          trigger.to_state.attributes.brightness !=
          trigger.from_state.attributes.brightness and
          states('input_select.living_room_scenes') != "Manual" and
          is_state('timer.living_room_scene_settling', 'idle')}}
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.living_room_scenes
          option: Manual
      - service: input_text.set_value
        data:
          entity_id: input_text.living_room_last_action
          value: "Manual Mode Detected"

      - delay:
          seconds: 1
      - service: script.living_room_manual_mode_natural_exception
      - service: script.living_room_manual_mode_stop_animation

    mode: single

script:
  living_room_manual_mode_natural_exception:
    alias: Living Room Revert To Natural Mode
    description: "If manual mode was triggered by brightness tweak, revert back minus brightness action"
    sequence:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_text.living_room_previous_scene
            state: "Natural"

      - service: input_text.set_value
        data:
          entity_id: input_text.living_room_last_action
          value: "Reinstating Natural Mode"

      - service: input_select.select_option
        data:
          entity_id: input_select.living_room_scenes
          option: "Natural"
      - service: script.living_room_scene_natural_update

  living_room_manual_mode_stop_animation:
    alias: Living Room Stop Animation
    description: "Stop animation, usually upno entering manual mode"
    sequence:
      - condition: not
        conditions:
          - condition: state
            entity_id: input_text.living_room_previous_scene
            state: "Natural"

      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.living_room_ceiling_animation
      - delay:
          seconds: 2
      - service: light.turn_on
        data_template:
          entity_id: light.living_room_ceiling_lights
          brightness: "{{ trigger.to_state.attributes.brightness | int }}"
          transition: 2

      - service: input_text.set_value
        data:
          entity_id: input_text.living_room_last_action
          value: "Animation: Manual Mode Stop"
