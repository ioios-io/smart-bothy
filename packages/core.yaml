input_select:
  user_mode:
    name: User Mode
    icon: mdi:badge-account
    options:
      - Normal
      - Extra
      - Expert
    initial: Normal

  debug_mode:
    name: Debug Mode
    icon: mdi:bug-check-outline
    options:
      - "Off"
      - Lights
      - Climate
      - Mobile App
      - Motion
    initial: "Off"

input_boolean:
  mode_notify_printers:
    name: "Notifications: Printers"
    icon: mdi:printer-3d-nozzle-alert-outline
    initial: on

  mode_override_circadian:
    name: "Override: Circadian Lighting"
    icon: mdi:white-balance-sunny
    initial: off

  event_updating_circadian:
    name: "Event: Updating Circadian Lighting"
    icon: mdi:white-balance-sunny
    initial: off

  service_refresh_ha:
    name: "Refresh Lovelace & Themes"
    icon: mdi:reload
    initial: off

  service_reload_ha:
    name: "Reload HA Core & Services"
    icon: mdi:reload-alert
    initial: off

  service_restart_ha:
    name: "Restart HA"
    icon: mdi:power-standby
    initial: off

  service_in_depth:
    name: "More Depth of Detail"
    icon: mdi:magnify-plus
    initial: off

input_text:
  core_status_display:
    name: "Status Display"
    icon: mdi:comma-circle
    initial: ""

binary_sensor:
  - platform: template
    sensors:
      core_script_running:
        friendly_name: "Core Script Running"
        value_template: >-
          {{ is_state('input_boolean.service_refresh_ha', 'on') or 
            is_state('input_boolean.service_reload_ha', 'on') }}

sensor:
  - platform: uptime
    name: Time Online

  - platform: websocket_api

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: swap_use_percent
      - type: processor_use
      - type: last_boot
      - type: load_1m

  # Stolen from DavidFW1960 @ https://github.com/DavidFW1960/home-assistant/blob/master/packages/sysmonitor.yaml
  - platform: template
    sensors:
      systemuptime:
        value_template: >-
          {% set time = (as_timestamp(now()) - as_timestamp(states('sensor.last_boot'))) %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
          {%- if time < 60 -%}
            Less than a minute
          {%- else -%}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                1 hour
              {%- else -%}
                {{ hours }} hours
              {%- endif -%}
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if minutes == 1 -%}
                1 minute
              {%- else -%}
                {{ minutes }} minutes
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}

  - platform: statistics
    entity_id: sensor.memory_use_percent
    name: memory
  - platform: statistics
    entity_id: sensor.processor_use
    name: processor

script:
  core_refresh_ha:
    alias: Refreshing Core
    description: "Refreshing Lovelace resources and custom themes"
    sequence:
      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Lovelace Resources"

      - service: lovelace.reload_resources

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Lovelace Themes"
      - service: frontend.reload_themes

  core_reload_ha:
    alias: Reloading Core
    description: "Reload core config and all reloadable domains"
    sequence:
      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Scenes"
      - service: scene.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Templates"
      - service: template.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Groups"
      - service: group.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Timers"
      - service: timer.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Thermostats"
      - service: generic_thermostat.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Persons"
      - service: person.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Zones"
      - service: zone.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Input Booleans"
      - service: input_boolean.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Input Selects"
      - service: input_select.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Input Texts"
      - service: input_text.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Input Numbers"
      - service: input_number.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Input Datetimes"
      - service: input_datetime.reload

automation:
  - alias: "System Runtime"
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 0
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.systemuptime

  - alias: "Update Speedtest"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: speedtestdotnet.speedtest

  - alias: Refresh HA
    description: Refresh Variables, Lovelace & Themes
    trigger:
      - platform: state
        entity_id: input_boolean.service_refresh_ha
        from: "off"
        to: "on"
    condition: []
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.service_refresh_ha

      - service: script.core_refresh_ha

      - service: input_boolean.turn_off
        entity_id: input_boolean.service_refresh_ha
    mode: single

  - alias: Reload HA
    description: Reload The Core
    trigger:
      - platform: state
        entity_id: input_boolean.service_reload_ha
        from: "off"
        to: "on"
    condition: []
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.service_reload_ha

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "HA Core"

      - service: homeassistant.reload_core_config

      - service: script.core_reload_ha

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Scripts"
      - service: script.reload
      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Automations"

      - service: input_boolean.turn_off
        entity_id: input_boolean.service_reload_ha
      - service: automation.reload

      - service: input_text.set_value
        data:
          entity_id: input_text.core_status_display
          value: "Successfully Reloaded"
      - delay:
          seconds: 2
    mode: single

  - alias: Restart HA
    description: Restart Home Assistant
    trigger:
      - platform: state
        entity_id: input_boolean.service_restart_ha
        from: "off"
        to: "on"
    condition: []
    action:
      - delay:
          seconds: 1
      - service: input_boolean.turn_off
        entity_id: input_boolean.service_restart_ha
      - delay:
          seconds: 3
      - service: homeassistant.restart
    mode: single

homeassistant:
  customize_glob:
    package.node_anchors:
      common: &common
        package: "core"

    # DEBUG
    input_boolean.debug_*_mode:
      icon: mdi:bug-outline
      <<: *common

  customize:
    sensor.disk_use_percent:
      friendly_name: Percent Disk Used
      <<: *common
    sensor.memory_use_percent:
      friendly_name: Percent Memory Used
      <<: *common
    sensor.load_1m:
      friendly_name: 1m Load
      <<: *common
    sensor.processor_use:
      friendly_name: Processor Used
      <<: *common
    sensor.last_boot:
      friendly_name: Last Boot
      device_class: timestamp
      icon: mdi:clock
      <<: *common
    sensor.systemuptime:
      friendly_name: Since Last Boot
      icon: mdi:clock
      <<: *common
    sensor.memory:
      friendly_name: Memory % Use Stats
      icon: mdi:memory
      <<: *common
    sensor.processor:
      friendly_name: Processor % Use Stats
      icon: mdi:memory
      <<: *common
